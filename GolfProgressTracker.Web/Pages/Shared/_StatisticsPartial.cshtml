@model GolfProgressTracker.Core.ViewModels.StatisticsViewModel

<div class="container text-center">
    <div class="row">
        <div class="col-2">
            <strong>Handicap:</strong>
        </div>
        <div class="col-auto">
            <span>@Model.FormatAsString(Model.Handicap)</span>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-2">
            <strong>Par 3 Score:</strong>
        </div>
        <div class="col-auto">
            <span>@Model.FormatAsString(Model.AverageParThreeScore)</span>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-2">
            <strong>Par 4 Score:</strong>
        </div>
        <div class="col-auto">
            <span>@Model.FormatAsString(Model.AverageParFourScore)</span>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-2">
            <strong>Par 4 Score:</strong>
        </div>
        <div class="col-auto">
            <span>@Model.FormatAsString(Model.AverageParFiveScore)</span>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <canvas id="ScoreOverTimeChart" width="800" height="400"></canvas>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
@{ var roundGraphData = Model.RoundGraphData; }

<script>
    const canvas = document
        .getElementById('ScoreOverTimeChart')
        .getContext('2d');

    const chart = new Chart(canvas, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(roundGraphData.TitlesAndDates)),
            datasets: [{
                label: 'Score vs Par',
                data: @Html.Raw(Json.Serialize(roundGraphData.Scores)),
                borderWidth: 2,
                borderColor: 'rgba(75, 192, 192, 1)',
                fill: false,
                tension: 0.1
            }]
        },
        options: {
            plugins: {
                legend: {
                    labels: {
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 14
                        }
                    }
                }
            },
            scales: {
                y: {
                    title: {
                        display: true,
                        text: 'Score',
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 12
                        }
                    },
                    min: -10,
                    max: 26,
                    ticks: {
                        color: '#000',
                        font: {
                            size: 12
                        },
                        stepSize: 2
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Round',
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 12
                        }
                    },
                    ticks: {
                        color: '#000',
                        font: {
                            size: 12
                        }
                    }
                }
            }
        }
    });
</script>