@using System.Globalization
@model GolfProgressTracker.Core.ViewModels.RoundAndHolesViewModel

<div class="container text-center">
    <div class="row text-start ms-5 text-light">
        <div class="col">
            <h3>@Model.Round.Title</h3>
        </div>
        <div class="col">
            <h4>@Model.Round.DatePlayed.ToString("D", CultureInfo.CreateSpecificCulture("en-US"))</h4>
        </div>
    </div>
    <div class="row text-start ms-5">
        <div class="col-auto">
            <form method="post">
                <input type="submit" class="btn btn-danger" asp-page-handler="DeleteRound" asp-route-roundId="@Model.Round.Id" value="Delete Round" />
            </form>
        </div>
        <div class="col-auto">
            <a asp-page="EditRound" asp-route-RoundId="@Model.Round.Id" class="btn btn-info">Edit Round</a>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-12">
            <table class="table table-dark table-striped">
                <thead>
                    <tr>
                        <td><strong>Hole</strong></td>
                        <td><strong>Par</strong></td>
                        <td><strong>Shots</strong></td>
                        <td><strong>Score</strong></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var hole in Model.Holes)
                    {
                        string score;
                        var diff = hole.Shots - hole.Par;
                        if (diff > 0)
                        {
                            score = "+" + diff;
                        }
                        else if (diff < 0)
                        {
                            score = diff + "";
                        }
                        else
                        {
                            score = "Par";
                        }

                        <tr>
                            <td>@hole.Number</td>
                            <td>@hole.Par</td>
                            <td>@hole.Shots</td>
                            <td>@score</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row mt-2 text-light">
        <div class="col container">
            @{
                var par = Model.Holes.Sum(h => h.Par);
                var shots = Model.Holes.Sum(h => h.Shots);
                var totalDiff = shots - par;
                string totalScore;

                if (totalDiff > 0)
                {
                    totalScore = "+" + totalDiff;
                }
                else if (totalDiff < 0)
                {
                    totalScore = totalDiff + "";
                }
                else
                {
                    totalScore = "Par";
                }
            }
            <div class="row">
                <div class="col">
                    <h5>Totals</h5>
                </div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Par:</strong>
                </div>
                <div class="col">
                    <span>@par</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Shots:</strong>
                </div>
                <div class="col">
                    <span>@shots</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Score:</strong>
                </div>
                <div class="col">
                    <span>@totalScore</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-3">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Holes:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Par 3:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Par == 3)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Par 4:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Par == 4)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Par 5:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Par == 5)</span>
                </div>
                <div class="col-3"></div>
            </div>
        </div>
        <div class="col container">
            <div class="row">
                <div class="col">
                    <h5>Stats</h5>
                </div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Eagle:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Shots - h.Par == -2)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Birdie:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Shots - h.Par == -1)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Par:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Shots - h.Par == 0)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Bogey:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Shots - h.Par == 1)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-1">
                <div class="col-3"></div>
                <div class="col">
                    <strong>Double:</strong>
                </div>
                <div class="col">
                    <span>@Model.Holes.Count(h => h.Shots - h.Par == 2)</span>
                </div>
                <div class="col-3"></div>
            </div>
            <div class="row mt-3">
                <div class="col-2"></div>
                <div class="col">
                    <strong>Best Hole:</strong>
                </div>
                <div class="col">
                    @{
                        var bestHole = Model.Holes.MinBy(h => h.Shots - h.Par)!;
                        var bestHolePrefix = "";
                        var bestHoleScore = bestHole.Shots - bestHole.Par;

                        if (bestHoleScore > 0)
                            bestHolePrefix = "+";
                        else if (bestHoleScore < 0)
                            bestHolePrefix = "-";

                        var bestHoleStr = bestHolePrefix + Math.Abs((int)bestHoleScore!);
                    }
                    <span>Hole @(bestHole.Number): @(bestHoleStr == "0" ? "Par" : bestHoleStr)</span>
                </div>
                <div class="col-2"></div>
            </div>
            <div class="row mt-1">
                <div class="col-2"></div>
                <div class="col">
                    <strong>Worst Hole:</strong>
                </div>
                <div class="col">
                    @{
                        var worstHole = Model.Holes.MaxBy(h => h.Shots - h.Par)!;
                        var worstHolePrefix = "";
                        var worstHoleScore = worstHole.Shots - worstHole.Par;

                        if (worstHoleScore > 0)
                            worstHolePrefix = "+";
                        else if (worstHoleScore < 0)
                            worstHolePrefix = "-";

                        var worstHoleStr = worstHolePrefix + Math.Abs((int)worstHoleScore!);
                    }
                    <span>Hole @(worstHole.Number): @(worstHoleStr == "0" ? "Par" : worstHoleStr)</span>
                </div>
                <div class="col-2"></div>
            </div>
        </div>
    </div>
</div>